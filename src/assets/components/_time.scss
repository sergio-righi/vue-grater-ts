@use '../utils/index' as *;

.gv-time-picker {
  width: 280px;

  .gv-header {
    width: 100%;
    height: 100px;
    @include d-flex;
    padding: $default-distance;
    color: var(--gv-color-accent);
    @include align-items(flex-end);
    @include justify-content(flex-end);
    background-color: var(--gv-accent);
    @include transition(opacity 300ms ease);

    .gv-item {
      opacity: 0.7;
      cursor: pointer;

      &:first-child {
        text-align: right;
      }

      &:last-child {
        text-align: center;
      }

      &:hover,
      &.active {
        opacity: 1;
      }

      &.active {
        cursor: default;
      }
    }

    .gv-separator {
      margin: 0 $default-distance * 0.5;
      padding-bottom: $default-distance * 0.5;
    }

    .gv-period {
      color: inherit;
      line-height: 1;
      font-size: $font-size * 1.5;
      @include align-self(flex-end);
      margin-left: $default-distance * 0.25;
      margin-bottom: $default-distance * 0.5;
    }

    .gv-item,
    .gv-separator {
      color: inherit;
      line-height: 1;
      font-size: $font-size * 4;
    }
  }

  .gv-content {
    @include d-flex;
    flex-basis: 300px;
    position: relative;
    color: var(--gv-color-font);
    @include flex-direction(column);
    @include justify-content(center);
    padding: $default-distance * 0.75;
    background-color: var(--gv-color-theme);

    .gv-clock {
      width: 100%;
      padding-top: 100%;
      max-width: initial;
      position: relative;
      @include flex(1 0 auto);
      @include block-selection;
      background-color: var(--gv-color-border);
      @include border-radius($border-radius-circle);
      @include transition(300ms cubic-bezier(0.25, 0.8, 0.5, 1));

      .gv-inner {
        top: 27px;
        left: 27px;
        right: 27px;
        bottom: 27px;
        position: absolute;
        pointer-events: none;

        &:after {
          top: 50%;
          left: 50%;
          width: 8px;
          z-index: 3;
          height: 8px;
          content: "";
          position: absolute;
          box-sizing: inherit;
          border-color: currentColor;
          background-color: currentColor;
          @include transform(translate(-50%, -50%));
          @include border-radius($border-radius-circle);
        }

        .gv-pointer {
          z-index: 2;
          width: 2px;
          bottom: 50%;
          position: absolute;
          left: calc(50% - 1px);
          will-change: transform;
          height: calc(50% - 4px);
          transform-origin: center bottom;
          border-color: var(--gv-color-border);
          background-color: var(--gv-secondary);

          &.active {
            border-color: var(--gv-accent);
            background-color: var(--gv-accent);
          }
        }

        .gv-item {
          z-index: 5;
          width: 40px;
          height: 40px;
          @include d-flex;
          position: absolute;
          text-align: center;
          pointer-events: none;
          @include block-selection;
          @include align-items(center);
          font-size: $font-size * 0.875;
          @include justify-content(center);
          @include transform(translate(-50%, -50%));
          @include border-radius($border-radius-circle);

          &.active {
            color: var(--gv-color-accent);
            background-color: var(--gv-accent);
          }

          &.disabled {
            opacity: 0.3;
          }
        }
      }
    }

    .gv-time {
      bottom: 0;
      cursor: pointer;
      font-size: $font-size * 1.125;
      position: absolute;
      letter-spacing: 1px;

      &.active {
        cursor: default;
        font-weight: 600;
        color: var(--gv-accent);
      }

      &.period-am {
        left: 0;
      }
  
      &.period-pm {
        right: 0;
      }
    }
  }
}
