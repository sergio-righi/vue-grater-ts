@use '../utils/index' as *;

.gv-field {
  @include d-flex;
  @include flex(1);
  @include flex-direction(column);
  margin-bottom: $default-distance * 0.875;

  &.disabled {
    pointer-events: none;
  }

  &.outline {
    // &.has-focus {
    //   & > .gv-inline {
    //     & > .gv-outline {
    //       border-width: 2px;
    //     }
    //   }
    // }

    & > .gv-inline {
      border: 0;
      // overflow: visible;
      background-color: transparent;

      & > .gv-element {
        z-index: 1;
        @include d-flex;
        padding: $default-distance * 0.75 $default-distance $default-distance *
          0.75;
      }
    }
  }

  &.required {
    & > .gv-inline {
      & > .gv-label {
        &:after {
          content: '*';
          margin-left: 1px;
        }
      }
    }
  }

  &.error {
    & > .gv-inline {
      color: var(--gv-error);
    }

    &.outline {
      & > .gv-inline {
        & > .gv-outline {
          & > .gv-notch,
          & > .gv-leading,
          & > .gv-trailing {
            border-color: var(--gv-error) !important;
          }
        }
      }
    }

    &.has-focus {
      & > .gv-inline {
        & > .gv-line {
          background-color: var(--gv-error) !important;
        }

        & > .gv-outline {
          & > .gv-notch {
            & > .gv-label {
              color: var(--gv-error) !important;
            }
          }
        }
      }
    }

    & > .gv-inline {
      border-color: var(--gv-error) !important;

      & > .gv-label {
        color: var(--gv-error) !important;
      }

      & > .gv-element {
        color: var(--gv-error);
      }
    }

    & > .gv-helper {
      & > .gv-text {
        color: var(--gv-error) !important;
      }
    }
  }

  &.no-label {
    & > .gv-inline {
      & > .gv-element {
        padding: $default-distance;
      }

      & > div.gv-element {
        line-height: 1;
      }
    }
  }

  &.has-focus {
    &.embed {
      &:not(.has-value) {
        & > .gv-inline {
          & > .gv-element + .gv-label {
            @include transform(translateY(-50%) !important);
          }
        }
      }

      // & > .gv-inline {
      //   & > .gv-outline {
      //     & > .gv-leading {
      //       border-bottom-left-radius: 0;
      //     }

      //     & > .gv-trailing {
      //       border-bottom-right-radius: 0;
      //     }
      //   }
      // }
    }

    & > .gv-inline {
      border-color: var(--gv-primary);
      // @include border-radius($border-radius $border-radius 0 0);

      // & > .gv-line {
      //   opacity: 1;
      //   @include transform(scaleX(1));
      //   background-color: var(--gv-primary);
      // }

      & > .gv-outline {
        & > .gv-notch,
        & > .gv-leading,
        & > .gv-trailing {
          // border-width: 2px;
          border-color: var(--gv-primary);

          & > .gv-label {
            color: var(--gv-primary);
          }
        }
      }
    }
  }

  &.has-focus,
  &.has-value {
    &.outline {
      &.multiline {
        & > .gv-inline {
          & > .gv-label,
          & > .gv-outline > .gv-notch > .gv-label {
            font-size: $font-size * 0.75;
            @include transform(translateY(-23px)); // scale(0.75));
          }

          & > .gv-element {
            padding: $default-distance * 0.75 $default-distance
              $default-distance * 0.25;
          }
        }
      }

      & > .gv-inline {
        & > .gv-outline {
          & > .gv-notch {
            border-top: 0;
            padding-right: $default-distance * 0.5;
          }
        }

        & > .gv-label,
        & > .gv-outline > .gv-notch > .gv-label {
          font-size: $font-size * 0.75;
          left: $default-distance * 0.25;
          @include transform(translateY(-33px)); // scale(0.75));
        }
      }
    }

    & > .gv-inline {
      &
        > .gv-element:not([type='file'], [type='hidden'], [type='image'])
        + .gv-label {
        cursor: auto;
        @include transform(translateY(-80%) scale(0.75));
      }

      & > textarea.gv-element + .gv-label {
        @include transform(translateY(-40%) scale(0.75) !important);
      }
    }
  }

  &:not(.multiline) {
    & > .gv-inline {
      height: $field-height;
    }
  }

  &.multiline {
    & > .gv-inline {
      & > .gv-element {
        overflow-y: auto;
      }

      & > .gv-label,
      & > .gv-outline > .gv-notch > .gv-label {
        @include transform(initial);
        top: $default-distance * 0.75;
      }
    }
  }

  &.embed {
    cursor: pointer;

    & > .gv-inline {
      & > .gv-element {
        white-space: nowrap;
        display: inline-block;
        text-overflow: ellipsis;
      }
    }
  }

  & > .gv-inline {
    // overflow: hidden;
    position: relative;
    @include d-inline-flex;
    color: var(--gv-color-font);
    @include flex-direction(column);
    @include border-radius($border-radius);
    background-color: var(--gv-color-field);
    border: 1px solid var(--gv-color-border);

    &.has-leading {
      & > .gv-label {
        right: initial;
        left: $default-distance * 3;
      }

      & > .gv-element {
        padding-left: $default-distance * 3;
      }

      & > .gv-outline > .gv-notch > .gv-label {
        left: 36px;
      }
    }

    &.has-trailing {
      & > .gv-element {
        padding-right: $default-distance * 3;
      }
    }

    // &:before,
    // &:after {
    //   opacity: 0;
    //   width: 200%;
    //   content: "";
    //   height: 200%;
    //   position: absolute;
    //   pointer-events: none;
    //   top: calc(50% - 100%);
    //   left: calc(50% - 100%);
    // }

    & > .gv-leading {
      right: auto;
      opacity: 0.7;
      line-height: 1;
      color: inherit;
      pointer-events: none;
      left: $default-distance;
    }

    & > .gv-trailing {
      left: auto;
      z-index: 2;
      color: inherit;
      @include d-inline-flex;
      right: $default-distance;
      gap: $default-distance * 0.5;

      span {
        max-width: 100px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        font-size: $font-size * 0.75;
      }
    }

    & > .gv-leading,
    & > .gv-trailing {
      top: 50%;
      position: absolute;
      @include transform(translateY(-50%));
    }

    // & > .gv-line {
    //   left: 0;
    //   right: 0;
    //   bottom: 0;
    //   opacity: 0;
    //   z-index: 2;
    //   height: 2px;
    //   position: absolute;
    //   @include transform(scaleX(0));
    //   @include transition(
    //     transform 180ms cubic-bezier(0.4, 0, 0.2, 1),
    //     opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)
    //   );
    // }

    & > .gv-outline {
      left: 0;
      right: 0;
      width: 100%;
      height: 100%;
      max-width: 100%;
      @include d-flex;
      text-align: left;
      position: absolute;
      pointer-events: none;
      color: var(--gv-color-theme);

      & > .gv-leading {
        width: 12px;
        border-right: none;
        pointer-events: none;
        border-left: 1px solid;
        @include border-radius($border-radius 0 0 $border-radius);
      }

      & > .gv-notch {
        width: auto;
        pointer-events: none;
        @include flex(0 0 auto);
        max-width: calc(100% - 12px * 2);

        & > .gv-label {
          max-width: 100%;
          position: relative;
          display: inline-block;
          color: var(--gv-color-font);
          left: $default-distance * 0.25;
        }
      }

      & > .gv-trailing {
        @include flex(1);
        border-left: none;
        border-right: 1px solid;
        @include border-radius(0 $border-radius $border-radius 0);
      }

      & > .gv-notch,
      & > .gv-leading,
      & > .gv-trailing {
        height: 100%;
        border-top: 1px solid;
        border-bottom: 1px solid;
        border-color: var(--gv-color-border);
      }
    }

    & > .gv-label {
      right: initial;
      color: inherit;
      position: absolute;
      left: $default-distance;
      text-overflow: ellipsis;
      text-transform: inherit;
      text-decoration: inherit;
    }

    & > .gv-label,
    & > .gv-outline > .gv-notch > .gv-label {
      top: 50%;
      cursor: text;
      overflow: hidden;
      font-weight: 400;
      text-align: left;
      white-space: nowrap;
      pointer-events: none;
      will-change: transform;
      font-size: $font-size * 1;
      transform-origin: left top;
      @include transform(translateY(-50%));
      @include transition(
        left 300ms cubic-bezier(0.4, 0, 0.2, 1),
        transform 150ms cubic-bezier(0.4, 0, 0.2, 1),
        color 150ms cubic-bezier(0.4, 0, 0.2, 1)
      );
    }

    & > .gv-element {
      padding: $default-distance $default-distance $default-distance * 0.25;
    }

    & > textarea.gv-element {
      resize: vertical;
      min-height: 120px;
      padding: $default-distance * 1.375 $default-distance $default-distance *
        0.25;
    }

    & > .gv-element {
      width: 100%;
      border: none;
      height: 100%;
      outline: none;
      overflow: hidden;
      background: none;
      appearance: none;
      font-weight: 400;
      // line-height: initial;
      text-transform: inherit;
      text-decoration: inherit;
      color: var(--gv-color-font);
      @include align-self(flex-end);
      font-size: $font-size * 0.9375;
      @include border-radius(inherit);
      @include transition(opacity 150ms cubic-bezier(0.4, 0, 0.2, 1));

      &[type='file'],
      &[type='image'],
      &[type='hidden'] {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        opacity: 0;
        z-index: 0;
        overflow: hidden;
        position: absolute;
        @include transition(all 300ms ease);
      }
    }
  }

  & > .gv-helper {
    @include d-flex;
    @include justify-content(space-between);

    &.persistent {
      & > .gv-text {
        opacity: 1;
        will-change: initial;
        @include transition(none);
      }
    }

    & > .gv-text {
      margin: 0;
      opacity: 0;
      will-change: opacity;
      @include transition(opacity 150ms cubic-bezier(0.4, 0, 0.2, 1));

      &.active {
        opacity: 1;
        will-change: initial;
        @include transition(none);
      }
    }

    & > .gv-counter {
      margin-right: 0;
      padding-right: 0;
      margin-left: auto;
      white-space: nowrap;
      padding-left: $default-distance;
    }

    & > .gv-text,
    & > .gv-counter {
      margin-top: 0;
      display: block;
      font-weight: 400;
      line-height: normal;
      text-transform: inherit;
      text-decoration: inherit;
      font-size: $font-size * 0.75;

      &:before {
        width: 0;
        content: '';
        vertical-align: 0;
        display: inline-block;
        height: $default-distance;
      }
    }
  }
}
